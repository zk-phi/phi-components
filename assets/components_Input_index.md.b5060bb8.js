import{r as t,o as p,c as r,a as s,t as i,b as a,e as n}from"./app.30956e6a.js";const c=s("h1",{id:"input",tabindex:"-1"},[a("Input "),s("a",{class:"header-anchor",href:"#input","aria-hidden":"true"},"#")],-1),d=s("p",null,[a("A text input works just like "),s("code",null,"<input type='text'>"),a(".")],-1),u=s("h2",{id:"demo",tabindex:"-1"},[a("Demo "),s("a",{class:"header-anchor",href:"#demo","aria-hidden":"true"},"#")],-1),D=["value"],F=n('<h3 id="size-variants" tabindex="-1">Size variants <a class="header-anchor" href="#size-variants" aria-hidden="true">#</a></h3><p><code>small</code> for inputs in popovers.</p><figure><phi-input size="small" value="abrakadabra"></phi-input></figure><h3 id="color-variants" tabindex="-1">Color variants <a class="header-anchor" href="#color-variants" aria-hidden="true">#</a></h3><p><code>error</code> for invalid inputs.</p>',5),h=s("figure",null,[s("phi-input",{error:"",value:"adracabadra"})],-1),y=n(`<h2 id="web-components" tabindex="-1">Web Components <a class="header-anchor" href="#web-components" aria-hidden="true">#</a></h2><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">phi-input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">input</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abrakadabra</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">oninput</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#82AAFF;">handler</span><span style="color:#C3E88D;">()</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-hidden="true">#</a></h3><ul><li><code>value</code>: <code>string</code></li><li><code>size</code>: <code>&quot;normal&quot; | &quot;small&quot;</code></li><li><code>error</code>: <code>boolean</code></li></ul><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h3><ul><li><code>input</code></li></ul><h3 id="fields" tabindex="-1">Fields <a class="header-anchor" href="#fields" aria-hidden="true">#</a></h3><ul><li><code>value</code>: <code>string</code></li></ul><h3 id="form-compatiblity" tabindex="-1">Form compatiblity <a class="header-anchor" href="#form-compatiblity" aria-hidden="true">#</a></h3><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">method</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">post</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">phi-input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">magic_word</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">abrakadabra</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">submit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">form</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>Also works as expected with <code>&lt;form&gt;</code> and <code>&lt;input type=&quot;submit&quot;&gt;</code>.</p><h2 id="preact" tabindex="-1">Preact <a class="header-anchor" href="#preact" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;"> magicWord </span><span style="color:#89DDFF;">} </span><span style="color:#C792EA;">onInput</span><span style="color:#89DDFF;">={</span><span style="color:#A6ACCD;"> setMagicWord </span><span style="color:#89DDFF;">} /&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-hidden="true">#</a></h3><ul><li><code>value</code>: <code>string</code></li><li><code>onInput</code>: <code>string -&gt; void</code></li><li><code>size</code>: <code>string</code></li><li><code>error</code>: <code>boolean</code></li></ul>`,15),g=JSON.parse('{"title":"Input","description":"","frontmatter":{},"headers":[{"level":2,"title":"Demo","slug":"demo","link":"#demo","children":[{"level":3,"title":"Size variants","slug":"size-variants","link":"#size-variants","children":[]},{"level":3,"title":"Color variants","slug":"color-variants","link":"#color-variants","children":[]}]},{"level":2,"title":"Web Components","slug":"web-components","link":"#web-components","children":[{"level":3,"title":"Attributes","slug":"attributes","link":"#attributes","children":[]},{"level":3,"title":"Events","slug":"events","link":"#events","children":[]},{"level":3,"title":"Fields","slug":"fields","link":"#fields","children":[]},{"level":3,"title":"Form compatiblity","slug":"form-compatiblity","link":"#form-compatiblity","children":[]}]},{"level":2,"title":"Preact","slug":"preact","link":"#preact","children":[{"level":3,"title":"Props","slug":"props","link":"#props","children":[]}]}],"relativePath":"components/Input/index.md"}'),v={name:"components/Input/index.md"},C=Object.assign(v,{setup(m){const e=t("abrakadabra");return(b,l)=>(p(),r("div",null,[c,d,u,s("figure",null,[s("phi-input",{value:e.value,onInput:l[0]||(l[0]=o=>e.value=o.target.value)},null,40,D),s("p",null,"Input value = "+i(e.value),1)]),F,h,y]))}});export{g as __pageData,C as default};
