{"version":3,"file":"preact.umd.cjs","sources":["../src/components/inputs/Button/index.tsx","../src/components/inputs/IconButton/index.tsx","../src/components/inputs/TextButton/index.tsx"],"sourcesContent":["import type { ComponentChildren } from \"preact\";\n\n/**\n * Basic button components with some variants.\n *\n * Usage (CSS-only installation):\n *\n * ```html\n * <button class=\"phi-button default\" onclick=\"handleclick\">\n *   <span class=\"icon\">üç∫</span>\n *   Cheers!\n * </button>\n * ```\n *\n * Usage (as a React component):\n *\n * ```html\n * <Button variant=\"default\" onClick={clickHandler} icon=\"üç∫\">\n *   Cheers!\n * </Button>\n * ```\n */\nconst Button = ({\n  onClick,\n  danger,\n  variant = \"default\",\n  icon,\n  children,\n}: {\n  danger?: boolean,\n  variant: \"default\" | \"primary\" | \"dotted\" | \"icon\",\n  onClick: () => void,\n  icon?: ComponentChildren,\n  children: ComponentChildren,\n}) => (\n  <button\n      className={`phi-button ${variant} ${danger ? 'danger' : ''}`}\n      onClick={onClick}\n  >\n    {icon && <span className=\"icon\">{icon}</span>}\n    {children}\n  </button>\n);\n\nexport default Button;\n","import type { ComponentChildren } from \"preact\";\n\n/**\n * Icon-only less-significant buttons.\n * Suitable when the icon is widely recognized so that you don't need to annotate.\n * i.e. \"x\" for close buttons\n *\n * Usage (CSS-only installation):\n *\n * ```html\n * <button class=\"phi-icon-button\" onclick=\"handleclick\">\n *   Ôºã\n * </button>\n * ```\n *\n * Usage (as a React component):\n *\n * ```html\n * <IconButton onClick={clickHandler}>\n *   Ôºã\n * </Button>\n * ```\n */\nconst IconButton = ({\n  onClick,\n  danger,\n  children,\n}: {\n  danger?: boolean,\n  onClick: () => void,\n  children: ComponentChildren,\n}) => (\n  <button\n      className={`phi-icon-button ${danger ? 'danger' : ''}`}\n      onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nexport default IconButton;\n","import type { ComponentChildren } from \"preact\";\n\n/**\n * Buttons that look like link texts. Suitable when creating in-text buttons.\n *\n * Usage (CSS-only installation):\n *\n * ```html\n * <button class=\"phi-text-button\" onclick=\"handleclick\">\n *   üëÜ Click me\n * </button>\n * ```\n *\n * Usage (as a React component):\n *\n * ```html\n * <TextButton onClick={clickHandler}>\n *   üëÜ Click me\n * </Button>\n * ```\n */\nconst TextButton = ({\n  onClick,\n  danger,\n  children,\n}: {\n  danger?: boolean,\n  onClick: () => void,\n  children: ComponentChildren,\n}) => (\n  <button\n      className={`phi-text-button ${danger ? 'danger' : ''}`}\n      onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nexport default TextButton;\n"],"names":["Button","onClick","danger","variant","icon","children","jsxs","jsx","IconButton","TextButton"],"mappings":"uSAsBM,MAAAA,EAAS,CAAC,CACd,QAAAC,EACA,OAAAC,EACA,QAAAC,EAAU,UACV,KAAAC,EACA,SAAAC,CACF,IAOEC,EAAA,KAAC,SAAA,CACG,UAAW,cAAcH,CAAO,IAAID,EAAS,SAAW,EAAE,GAC1D,QAAAD,EAED,SAAA,CAAAG,GAASG,EAAA,IAAA,OAAA,CAAK,UAAU,OAAQ,SAAKH,EAAA,EACrCC,CAAA,CAAA,CACH,EClBIG,EAAa,CAAC,CAClB,QAAAP,EACA,OAAAC,EACA,SAAAG,CACF,IAKEE,EAAA,IAAC,SAAA,CACG,UAAW,mBAAmBL,EAAS,SAAW,EAAE,GACpD,QAAAD,EAED,SAAAI,CAAA,CACH,EChBII,EAAa,CAAC,CAClB,QAAAR,EACA,OAAAC,EACA,SAAAG,CACF,IAKEE,EAAA,IAAC,SAAA,CACG,UAAW,mBAAmBL,EAAS,SAAW,EAAE,GACpD,QAAAD,EAED,SAAAI,CAAA,CACH"}