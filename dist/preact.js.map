{"version":3,"file":"preact.js","sources":["../src/components/inputs/Button/index.tsx","../src/components/inputs/IconButton/index.tsx","../src/components/inputs/TextButton/index.tsx"],"sourcesContent":["import type { ComponentChildren } from \"preact\";\n\n/**\n * Basic button components with some variants.\n *\n * Usage (CSS-only installation):\n *\n * ```html\n * <button class=\"phi-button default\" onclick=\"handleclick\">\n *   <span class=\"icon\">üç∫</span>\n *   Cheers!\n * </button>\n * ```\n *\n * Usage (as a React component):\n *\n * ```html\n * <Button variant=\"default\" onClick={clickHandler} icon=\"üç∫\">\n *   Cheers!\n * </Button>\n * ```\n */\nconst Button = ({\n  onClick,\n  danger,\n  variant = \"default\",\n  icon,\n  children,\n}: {\n  danger?: boolean,\n  variant: \"default\" | \"primary\" | \"dotted\" | \"icon\",\n  onClick: () => void,\n  icon?: ComponentChildren,\n  children: ComponentChildren,\n}) => (\n  <button\n      className={`phi-button ${variant} ${danger ? 'danger' : ''}`}\n      onClick={onClick}\n  >\n    {icon && <span className=\"icon\">{icon}</span>}\n    {children}\n  </button>\n);\n\nexport default Button;\n","import type { ComponentChildren } from \"preact\";\n\n/**\n * Icon-only less-significant buttons.\n * Suitable when the icon is widely recognized so that you don't need to annotate.\n * i.e. \"x\" for close buttons\n *\n * Usage (CSS-only installation):\n *\n * ```html\n * <button class=\"phi-icon-button\" onclick=\"handleclick\">\n *   Ôºã\n * </button>\n * ```\n *\n * Usage (as a React component):\n *\n * ```html\n * <IconButton onClick={clickHandler}>\n *   Ôºã\n * </Button>\n * ```\n */\nconst IconButton = ({\n  onClick,\n  danger,\n  children,\n}: {\n  danger?: boolean,\n  onClick: () => void,\n  children: ComponentChildren,\n}) => (\n  <button\n      className={`phi-icon-button ${danger ? 'danger' : ''}`}\n      onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nexport default IconButton;\n","import type { ComponentChildren } from \"preact\";\n\n/**\n * Buttons that look like link texts. Suitable when creating in-text buttons.\n *\n * Usage (CSS-only installation):\n *\n * ```html\n * <button class=\"phi-text-button\" onclick=\"handleclick\">\n *   üëÜ Click me\n * </button>\n * ```\n *\n * Usage (as a React component):\n *\n * ```html\n * <TextButton onClick={clickHandler}>\n *   üëÜ Click me\n * </Button>\n * ```\n */\nconst TextButton = ({\n  onClick,\n  danger,\n  children,\n}: {\n  danger?: boolean,\n  onClick: () => void,\n  children: ComponentChildren,\n}) => (\n  <button\n      className={`phi-text-button ${danger ? 'danger' : ''}`}\n      onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nexport default TextButton;\n"],"names":["Button","onClick","danger","variant","icon","children","jsxs","jsx","IconButton","TextButton"],"mappings":";AAsBA,MAAMA,IAAS,CAAC;AAAA,EACd,SAAAC;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC,IAAU;AAAA,EACV,MAAAC;AAAA,EACA,UAAAC;AACF,MAOE,gBAAAC;AAAA,EAAC;AAAA,EAAA;AAAA,IACG,WAAW,cAAcH,CAAO,IAAID,IAAS,WAAW,EAAE;AAAA,IAC1D,SAAAD;AAAA,IAED,UAAA;AAAA,MAAAG,KAAS,gBAAAG,EAAA,QAAA,EAAK,WAAU,QAAQ,UAAKH,GAAA;AAAA,MACrCC;AAAA,IAAA;AAAA,EAAA;AACH,GClBIG,IAAa,CAAC;AAAA,EAClB,SAAAP;AAAA,EACA,QAAAC;AAAA,EACA,UAAAG;AACF,MAKE,gBAAAE;AAAA,EAAC;AAAA,EAAA;AAAA,IACG,WAAW,mBAAmBL,IAAS,WAAW,EAAE;AAAA,IACpD,SAAAD;AAAA,IAED,UAAAI;AAAA,EAAA;AACH,GChBII,IAAa,CAAC;AAAA,EAClB,SAAAR;AAAA,EACA,QAAAC;AAAA,EACA,UAAAG;AACF,MAKE,gBAAAE;AAAA,EAAC;AAAA,EAAA;AAAA,IACG,WAAW,mBAAmBL,IAAS,WAAW,EAAE;AAAA,IACpD,SAAAD;AAAA,IAED,UAAAI;AAAA,EAAA;AACH;"}